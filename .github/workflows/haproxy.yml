name: Cross-Compile HAProxy for ARMv7l (Static)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v2

      # Step 2: Set up cross-compilation environment
      - name: Set up cross-compilation environment
        run: |
          # Update package lists and install required dependencies
          sudo apt-get update

          # Remove containerd to resolve conflicts with containerd.io
          sudo apt-get remove --purge -y containerd containerd.io

          # Install cross-compilation tools and other necessary build dependencies
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf \
            binutils-arm-linux-gnueabihf \
            make \
            docker.io \
            libssl-dev \
            zlib1g-dev \
            libpcre3-dev \
            autoconf \
            libtool \
            wget \
            git \
            g++ \
            build-essential \
            curl \
            libc6-dev-armhf-cross

          # Fix any broken dependencies
          sudo apt-get install --fix-broken

      # Step 3: Cache dependencies for OpenSSL, PCRE, Zlib
      - name: Cache OpenSSL
        uses: actions/cache@v2
        with:
          path: ~/.cache/openssl
          key: ${{ runner.os }}-openssl-${{ hashFiles('**/openssl-1.1.1l.tar.gz') }}
          restore-keys: |
            ${{ runner.os }}-openssl-

      - name: Cache PCRE
        uses: actions/cache@v2
        with:
          path: ~/.cache/pcre
          key: ${{ runner.os }}-pcre-${{ hashFiles('**/pcre-8.45.tar.gz') }}
          restore-keys: |
            ${{ runner.os }}-pcre-

      - name: Cache Zlib
        uses: actions/cache@v2
        with:
          path: ~/.cache/zlib
          key: ${{ runner.os }}-zlib-${{ hashFiles('**/zlib-1.2.11.tar.gz') }}
          restore-keys: |
            ${{ runner.os }}-zlib-

      # Step 4: Download and build OpenSSL (Static)
      - name: Download and build OpenSSL (Static)
        run: |
          # Download and extract OpenSSL
          if [ ! -d "openssl-1.1.1l" ]; then
            wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz
            tar -xzf openssl-1.1.1l.tar.gz
            cd openssl-1.1.1l
            ./config no-shared no-dso no-tests --prefix=/opt/openssl
            make -j$(nproc)
            sudo make install
            cd ..
          else
            echo "OpenSSL already exists. Skipping..."
          fi

      # Step 5: Download and build PCRE (Static)
      - name: Download and build PCRE (Static)
        run: |
          # Download and extract PCRE
          if [ ! -d "pcre-8.45" ]; then
            echo "Downloading and extracting PCRE..."
            wget https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz/download -O pcre-8.45.tar.gz
            tar -xvzf pcre-8.45.tar.gz
            cd pcre-8.45
            ./configure --prefix=/opt/pcre --enable-static --disable-shared
            make -j$(nproc)
            sudo make install
            cd ..
          else
            echo "PCRE already exists. Skipping..."
          fi

      # Step 6: Download and build Zlib (Static)
      - name: Download and build Zlib (Static)
        run: |
          # Download and extract Zlib
          if [ ! -d "zlib-1.2.11" ]; then
            wget https://github.com/madler/zlib/archive/refs/tags/v1.2.11.tar.gz
            tar -xzf v1.2.11.tar.gz
            cd zlib-1.2.11
            ./configure --prefix=/opt/zlib --static
            make -j$(nproc)
            sudo make install
            cd ..
          else
            echo "Zlib already exists. Skipping..."
          fi

      # Step 7: Clone the HAProxy repository and select correct version
      - name: Clone and configure HAProxy (ARMv7 Static)
        run: |
          # Clone the HAProxy repository
          git clone https://github.com/haproxy/haproxy.git
          cd haproxy

          # Checkout the specific version or branch, e.g., "v2.5"
          git checkout v2.5  # or use 'git checkout master' for the latest

          # Clean up previous builds if any
          make clean

          # Configure HAProxy to use static libraries
          make TARGET=linux-armv7 CC=arm-linux-gnueabihf-gcc \
               ZLIB_LIB=/opt/zlib/lib ZLIB_INCLUDE=/opt/zlib/include \
               PCRE_LIB=/opt/pcre/lib PCRE_INCLUDE=/opt/pcre/include \
               OPENSSL_LIB=/opt/openssl/lib OPENSSL_INCLUDE=/opt/openssl/include \
               USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 \
               LIBZ_STATIC=1 LIBSSL_STATIC=1 \
               PCRE_STATIC=1

          # Compile HAProxy
          make -j$(nproc)
          sudo make install
          cd ..

      # Step 8: Verify HAProxy build
      - name: Verify HAProxy build
        run: |
          # Verify the static build of HAProxy
          haproxy -v
