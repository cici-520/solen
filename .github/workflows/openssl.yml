name: Build and Release Static Libraries

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v2

      # Step 2: Set up cross-compilation environment
      - name: Set up cross-compilation environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf \
            binutils-arm-linux-gnueabihf \
            make \
            wget \
            git \
            build-essential \
            curl \
            libc6-dev-armhf-cross

      # Step 3: Download and build OpenSSL (Static)
      - name: Build OpenSSL
        run: |
          if [ ! -d "openssl-1.1.1l" ]; then
            wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz
            tar -xzf openssl-1.1.1l.tar.gz
            cd openssl-1.1.1l
            ./config no-shared no-dso no-tests --prefix=/opt/openssl
            make -j$(nproc)
            sudo make install
            cd .. 
          fi

      # Step 4: Build PCRE (Static)
      - name: Build PCRE
        run: |
          if [ ! -d "pcre-8.45" ]; then
            wget https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz/download -O pcre-8.45.tar.gz
            tar -xvzf pcre-8.45.tar.gz
            cd pcre-8.45
            ./configure --prefix=/opt/pcre --enable-static --disable-shared
            make -j$(nproc)
            sudo make install
            cd ..
          fi

      # Step 5: Build Zlib (Static)
      - name: Build Zlib
        run: |
          if [ ! -d "zlib-1.2.11" ]; then
            wget https://github.com/madler/zlib/archive/refs/tags/v1.2.11.tar.gz
            tar -xzf v1.2.11.tar.gz
            cd zlib-1.2.11
            ./configure --prefix=/opt/zlib --static
            make -j$(nproc)
            sudo make install
            cd ..
          fi

      # Step 6: Create a Git tag for release
      - name: Create Git tag and push
        run: |
          VERSION="v1.0.0"
          
          # Set up user details
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create a tag
          git tag $VERSION
          
          # Push the tag to the repository using the GITHUB_TOKEN
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $VERSION

      # Step 7: Upload Static Libraries to GitHub Release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /opt/openssl/lib/libssl.a
            /opt/openssl/lib/libcrypto.a
            /opt/pcre/lib/libpcre.a
            /opt/zlib/lib/libz.a
